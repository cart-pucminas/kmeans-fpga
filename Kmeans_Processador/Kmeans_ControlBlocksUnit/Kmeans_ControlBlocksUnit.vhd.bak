library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

Entity Kmeans_ControlBlocksUnit is
	
	PORT(
		clk  		                 : in STD_LOGIC;
		nrst 			             : in STD_LOGIC;
		next_State                   : in STD_LOGIC_VECTOR(3 downto 0); --Proximo estado(bloco) a ser acessado na FMS 
		en_MemoryInitialize	         : out STD_LOGIC;
		en_ControlCentroidInitialize : out STD_LOGIC;
		en_CentroidInitialize        : out STD_LOGIC;   
		en_MapInitialize             : out STD_LOGIC;
		en_ControlCalcMap            : out STD_LOGIC;
		en_ControlCalcCentroid       : out STD_LOGIC;
		en_IterationCount            : out STD_LOGIC;
		en_OutputResult              : out STD_LOGIC;
		en_Saida	                 : out STD_LOGIC;
		en_wrRamMemoryA              : out STD_LOGIC;
		en_wrRamMemoryB              : out STD_LOGIC;
		op_muxRamMemory              : out STD_LOGIC_VECTOR(1 downto 0);
		op_muxRamMemoryAddr          : out STD_LOGIC_VECTOR(1 downto 0);
		op_muxCentroidData           : out STD_LOGIC;
		op_muxCentroidAddr           : out STD_LOGIC_VECTOR(1 downto 0);
		op_muxMapData                : out STD_LOGIC;
		op_muxMapAddr                : out STD_LOGIC;
		op_muxWrRam                  : out STD_LOGIC_VECTOR(1 downto 0);
		op_muxNextState              : out STD_LOGIC_VECTOR(3 downto 0)
	);

end Kmeans_ControlBlocksUnit;

ARCHITECTURE arch OF Kmeans_ControlBlocksUnit IS 
--Declaracao dos estados da FSM
TYPE state_type is (RESET, STATE_1);
SIGNAL state, state_fut 	: state_type;	


SIGNAL s_en_MemoryInitialize          :STD_LOGIC;
SIGNAL s_en_ControlCentroidInitialize : STD_LOGIC; 
SIGNAL s_en_CentroidInitialize        : STD_LOGIC;
SIGNAL s_en_MapInitialize       	  : STD_LOGIC;
SIGNAL s_en_ControlCalcMap      	  : STD_LOGIC;
SIGNAL s_en_ControlCalcCentroid 	  : STD_LOGIC;
SIGNAL s_en_IterationCount      	  : STD_LOGIC;
SIGNAL s_en_OutputResult        	  : STD_LOGIC;
SIGNAL s_en_Saida 					  : STD_LOGIC;
SIGNAL s_en_wrRamMemoryA	    	  : STD_LOGIC;
SIGNAL s_en_wrRamMemoryB	    	  : STD_LOGIC;
SIGNAL s_muxRamMemory          		  : STD_LOGIC_VECTOR (1 downto 0);
SIGNAL s_muxRamMemoryAddr      		  : STD_LOGIC_VECTOR (1 downto 0);
SIGNAL s_muxCentroidData       		  : STD_LOGIC;
SIGNAL s_muxCentroidAddr       	      : STD_LOGIC_VECTOR(1 downto 0);
SIGNAL s_muxMapData			  		  : STD_LOGIC;
SIGNAL s_muxMapAddr			   		  : STD_LOGIC;
SIGNAL s_muxWrRam			   		  : STD_LOGIC_VECTOR(1 downto 0);
SIGNAL s_muxNextState          		  : STD_LOGIC_VECTOR (3 downto 0);

BEGIN		
      --Parte combinacional
		PROCESS(clk, nrst)
		BEGIN
		   if nrst = '0' then
				state <= RESET;
		   elsif clk'event and clk='1' then					
				state <= state_fut;				
		   end if;
		END PROCESS;
		
		--Parte sequencial
		PROCESS(clk)
		BEGIN
			if clk'event and clk='1' then
				case state is
					
					when RESET =>
						state_fut                      <= STATE_1;
						s_en_MemoryInitialize          <= '0';
						s_en_ControlCentroidInitialize <= '0';
						s_en_CentroidInitialize        <= '0';
						s_en_MapInitialize       	   <= '0';
						s_en_ControlCalcMap		       <= '0';
						s_en_ControlCalcCentroid	   <= '0';
						s_en_IterationCount			   <= '0';
						s_en_OutputResult	 		   <= '0';
						s_en_Saida					   <= '0';
						s_en_wrRamMemoryA			   <= '0';
						s_en_wrRamMemoryB			   <= '0';
						s_muxRamMemory				   <= "00";
						s_muxRamMemoryAddr			   <= "00";
						s_muxCentroidData      		   <= '0';
						s_muxCentroidAddr			   <= "00";
						s_muxMapData           		   <= '0';
						s_muxMapAddr                   <= '0';
						s_muxWrRam 					   <= "00";
						s_muxNextState         		   <= "0001";
						
					when STATE_1 =>
						
						case next_State is
							--Estado IDLE
							when "0000" =>
								state_fut                      <= STATE_1;
								s_en_MemoryInitialize          <= '1';
								s_en_ControlCentroidInitialize <= '0';
								s_en_CentroidInitialize        <= '0';
								s_en_MapInitialize       	   <= '0';
								s_en_ControlCalcMap		       <= '0';
								s_en_ControlCalcCentroid	   <= '0';
								s_en_IterationCount			   <= '0';
								s_en_OutputResult	 		   <= '0';
								s_en_Saida					   <= '0';
								s_en_wrRamMemoryA			   <= '0';
								s_en_wrRamMemoryB			   <= '0';
								s_muxRamMemory				   <= "00";
								s_muxRamMemoryAddr			   <= "00";
								s_muxCentroidData      		   <= '0';
								s_muxCentroidAddr			   <= "00";
								s_muxMapData           		   <= '0';
								s_muxMapAddr                   <= '0';
								s_muxWrRam 					   <= "00";
								s_muxNextState         	       <= "0001";									
							
							--Estado Memory Initialize e RegisterBank
							when "0001" =>
								state_fut                      <= STATE_1;
								s_en_MemoryInitialize          <= '1';
								s_en_ControlCentroidInitialize <= '0';
								s_en_CentroidInitialize        <= '0';
								s_en_MapInitialize       	   <= '0';
								s_en_ControlCalcMap		       <= '0';
								s_en_ControlCalcCentroid	   <= '0';
								s_en_IterationCount			   <= '0';
								s_en_OutputResult	 		   <= '0';
								s_en_Saida					   <= '0';
								s_en_wrRamMemoryA			   <= '1';
								s_en_wrRamMemoryB			   <= '0';
								s_muxRamMemory				   <= "00";
								s_muxRamMemoryAddr			   <= "00";
								s_muxCentroidData      		   <= '0';
								s_muxCentroidAddr			   <= "00";
								s_muxMapData           		   <= '0';
								s_muxMapAddr                   <= '0';
								s_muxWrRam 					   <= "00";
								s_muxNextState         		   <= "0001";
								
							--Estado Control Centroid Initialize
							when "0010" =>
								state_fut                      <= STATE_1;
								s_en_MemoryInitialize          <= '0';
								s_en_ControlCentroidInitialize <= '1';
								s_en_CentroidInitialize        <= '0';
								s_en_MapInitialize       	   <= '0';
								s_en_ControlCalcMap		       <= '0';
								s_en_ControlCalcCentroid	   <= '0';
								s_en_IterationCount			   <= '0';
								s_en_OutputResult	 		   <= '0';
								s_en_Saida					   <= '0';
								s_en_wrRamMemoryA			   <= '0';
								s_en_wrRamMemoryB			   <= '0';
								s_muxRamMemory				   <= "01";
								s_muxRamMemoryAddr			   <= "01";
								s_muxCentroidData      		   <= '0';
								s_muxCentroidAddr			   <= "00";
								s_muxMapData           		   <= '0';
								s_muxMapAddr                   <= '0';
								s_muxWrRam 					   <= "00";
								s_muxNextState         		   <= "0010";
							
							--Estado Centroid Initialize
							when "0011" =>
								state_fut                      <= STATE_1;
								s_en_MemoryInitialize          <= '0';
								s_en_ControlCentroidInitialize <= '0';
								s_en_CentroidInitialize        <= '1';
								s_en_MapInitialize       	   <= '0';
								s_en_ControlCalcMap		       <= '0';
								s_en_ControlCalcCentroid	   <= '0';
								s_en_IterationCount			   <= '0';
								s_en_OutputResult	 		   <= '0';
								s_en_Saida					   <= '0';
								s_en_wrRamMemoryA			   <= '0';
								s_en_wrRamMemoryB			   <= '1';
								s_muxRamMemory				   <= "01";
								s_muxRamMemoryAddr			   <= "01";
								s_muxCentroidData      		   <= '0';
								s_muxCentroidAddr			   <= "01";
								s_muxMapData           		   <= '0';
								s_muxMapAddr                   <= '0';
								s_muxWrRam 					   <= "00";
								s_muxNextState         		   <= "0011";
								
							--Estado Map Initialize
							when "0100" =>
								state_fut                      <= STATE_1;
								s_en_MemoryInitialize          <= '0';
								s_en_ControlCentroidInitialize <= '0';
								s_en_CentroidInitialize        <= '0';
								s_en_MapInitialize       	   <= '1';
								s_en_ControlCalcMap		       <= '0';
								s_en_ControlCalcCentroid	   <= '0';
								s_en_IterationCount			   <= '0';
								s_en_OutputResult	 		   <= '0';
								s_en_Saida					   <= '0';
								s_en_wrRamMemoryA			   <= '1';
								s_en_wrRamMemoryB			   <= '0';
								s_muxRamMemory				   <= "10";
								s_muxRamMemoryAddr			   <= "10";
								s_muxCentroidData      		   <= '0';
								s_muxCentroidAddr			   <= "00";
								s_muxMapData           		   <= '0';
								s_muxMapAddr                   <= '0';
								s_muxWrRam 					   <= "00";
								s_muxNextState         		   <= "0100";	
							
							--Estado CalcMap Module
							when "0101" =>
								state_fut                      <= STATE_1;
								s_en_MemoryInitialize          <= '0';
								s_en_ControlCentroidInitialize <= '0';
								s_en_CentroidInitialize        <= '0';
								s_en_MapInitialize       	   <= '0';
								s_en_ControlCalcMap		       <= '1';
								s_en_ControlCalcCentroid	   <= '0';
								s_en_IterationCount			   <= '0';
								s_en_OutputResult	 		   <= '0';
								s_en_Saida					   <= '0';
								s_en_wrRamMemoryA			   <= '0';
								s_en_wrRamMemoryB			   <= '0';
								s_muxRamMemory				   <= "10";
								s_muxRamMemoryAddr			   <= "10";
								s_muxCentroidData      		   <= '0';
								s_muxCentroidAddr			   <= "00";
								s_muxMapData           		   <= '1';
								s_muxMapAddr                   <= '1';
								s_muxWrRam 					   <= "10";
								s_muxNextState         		   <= "0101";
								
							--Estado CalcCentroid Module
							when "0110" =>
								state_fut                      <= STATE_1;
								s_en_MemoryInitialize          <= '0';
								s_en_ControlCentroidInitialize <= '0';
								s_en_CentroidInitialize        <= '0';
								s_en_MapInitialize       	   <= '0';
								s_en_ControlCalcMap		       <= '0';
								s_en_ControlCalcCentroid	   <= '1';
								s_en_IterationCount			   <= '0';
								s_en_OutputResult	 		   <= '0';
								s_en_Saida					   <= '0';
								s_en_wrRamMemoryA			   <= '0';
								s_en_wrRamMemoryB			   <= '0';
								s_muxRamMemory				   <= "01";
								s_muxRamMemoryAddr			   <= "01";
								s_muxCentroidData      		   <= '1';
								s_muxCentroidAddr			   <= "10";
								s_muxMapData           		   <= '0';
								s_muxMapAddr                   <= '0';
								s_muxWrRam 					   <= "01";
								s_muxNextState         		   <= "0110";	
								
							--Estado Interation Count
							when "0111" =>
								state_fut                      <= STATE_1;
								s_en_MemoryInitialize          <= '0';
								s_en_ControlCentroidInitialize <= '0';
								s_en_CentroidInitialize        <= '0';
								s_en_MapInitialize       	   <= '0';
								s_en_ControlCalcMap		       <= '0';
								s_en_ControlCalcCentroid	   <= '0';
								s_en_IterationCount			   <= '1';
								s_en_OutputResult	 		   <= '0';
								s_en_Saida					   <= '0';
								s_en_wrRamMemoryA			   <= '0';
								s_en_wrRamMemoryB			   <= '0';
								s_muxRamMemory				   <= "00";
								s_muxRamMemoryAddr			   <= "00";
								s_muxCentroidData      		   <= '0';
								s_muxCentroidAddr			   <= "00";
								s_muxMapData           		   <= '0';
								s_muxMapAddr                   <= '0';
								s_muxWrRam 					   <= "00";
								s_muxNextState         		   <= "0111";	
								
							--Estado Output Result 
							when others =>
								state_fut                      <= STATE_1;
								s_en_MemoryInitialize          <= '0';
								s_en_ControlCentroidInitialize <= '0';
								s_en_CentroidInitialize        <= '0';
								s_en_MapInitialize       	   <= '0';
								s_en_ControlCalcMap		       <= '0';
								s_en_ControlCalcCentroid	   <= '0';
								s_en_IterationCount			   <= '0';
								s_en_OutputResult	 		   <= '1';
								s_en_Saida					   <= '1';
								s_en_wrRamMemoryA			   <= '0';
								s_en_wrRamMemoryB			   <= '0';
								s_muxRamMemory				   <= "00";
								s_muxRamMemoryAddr			   <= "11";
								s_muxCentroidData      		   <= '0';
								s_muxCentroidAddr			   <= "00";
								s_muxMapData           		   <= '0';
								s_muxMapAddr                   <= '0';
								s_muxWrRam 					   <= "00";
								s_muxNextState         		   <= "1000";	
							
							end case;										
				end case;
			end if;
		END PROCESS;
		
--Ligacao dos sinais com os bis de saida
en_MemoryInitialize 		 <= s_en_MemoryInitialize;          
en_ControlCentroidInitialize <= s_en_ControlCentroidInitialize;
en_CentroidInitialize 		 <= s_en_CentroidInitialize;
en_MapInitialize 		     <= s_en_MapInitialize;
en_ControlCalcMap			 <= s_en_ControlCalcMap;
en_ControlCalcCentroid		 <= s_en_ControlCalcCentroid;
en_IterationCount 			 <= s_en_IterationCount;
en_OutputResult				 <= s_en_OutputResult;
en_Saida					 <= s_en_Saida;
en_wrRamMemoryA				 <= s_en_wrRamMemoryA;
en_wrRamMemoryB				 <= s_en_wrRamMemoryB;
op_muxRamMemory				 <= s_muxRamMemory;
op_muxRamMemoryAddr			 <= s_muxRamMemoryAddr;
op_muxCentroidData			 <= s_muxCentroidData;
op_muxCentroidAddr           <= s_muxCentroidAddr;
op_muxMapData			     <= s_muxMapData;
op_muxMapAddr				 <= s_muxMapAddr;
op_muxWrRam					 <= s_muxWrRam;
op_muxNextState				 <= s_muxNextState;	

end arch;
