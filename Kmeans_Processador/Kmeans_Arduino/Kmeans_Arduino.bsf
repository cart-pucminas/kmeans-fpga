/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 2016  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Intel and sold by Intel or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 208 192)
	(text "Kmeans_Arduino" (rect 5 0 76 12)(font "Arial" ))
	(text "inst" (rect 8 160 20 172)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "rst" (rect 0 0 10 12)(font "Arial" ))
		(text "rst" (rect 21 27 31 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 1))
	)
	(port
		(pt 0 48)
		(input)
		(text "dado[7..0]" (rect 0 0 38 12)(font "Arial" ))
		(text "dado[7..0]" (rect 21 43 59 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 3))
	)
	(port
		(pt 0 64)
		(input)
		(text "clk" (rect 0 0 10 12)(font "Arial" ))
		(text "clk" (rect 21 59 31 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 1))
	)
	(port
		(pt 192 64)
		(output)
		(text "in_progress" (rect 0 0 47 12)(font "Arial" ))
		(text "in_progress" (rect 124 59 171 71)(font "Arial" ))
		(line (pt 192 64)(pt 176 64)(line_width 1))
	)
	(port
		(pt 192 80)
		(output)
		(text "tx_done" (rect 0 0 31 12)(font "Arial" ))
		(text "tx_done" (rect 140 75 171 87)(font "Arial" ))
		(line (pt 192 80)(pt 176 80)(line_width 1))
	)
	(port
		(pt 192 112)
		(output)
		(text "rx_byte[7..0]" (rect 0 0 51 12)(font "Arial" ))
		(text "rx_byte[7..0]" (rect 120 107 171 119)(font "Arial" ))
		(line (pt 192 112)(pt 176 112)(line_width 3))
	)
	(port
		(pt 192 128)
		(output)
		(text "rx_data_rdy" (rect 0 0 50 12)(font "Arial" ))
		(text "rx_data_rdy" (rect 121 123 171 135)(font "Arial" ))
		(line (pt 192 128)(pt 176 128)(line_width 1))
	)
	(port
		(pt 192 144)
		(output)
		(text "readDone" (rect 0 0 38 12)(font "Arial" ))
		(text "readDone" (rect 133 139 171 151)(font "Arial" ))
		(line (pt 192 144)(pt 176 144)(line_width 1))
	)
	(port
		(pt 192 32)
		(bidir)
		(text "scl" (rect 0 0 10 12)(font "Arial" ))
		(text "scl" (rect 161 27 171 39)(font "Arial" ))
		(line (pt 192 32)(pt 176 32)(line_width 1))
	)
	(port
		(pt 192 48)
		(bidir)
		(text "sda" (rect 0 0 14 12)(font "Arial" ))
		(text "sda" (rect 157 43 171 55)(font "Arial" ))
		(line (pt 192 48)(pt 176 48)(line_width 1))
	)
	(port
		(pt 192 96)
		(bidir)
		(text "tx_byte[7..0]" (rect 0 0 50 12)(font "Arial" ))
		(text "tx_byte[7..0]" (rect 121 91 171 103)(font "Arial" ))
		(line (pt 192 96)(pt 176 96)(line_width 3))
	)
	(parameter
		"SLAVE_ADDR"
		"0000001"
		""
		(type "PARAMETER_UNSIGNED_BIN")	)
	(drawing
		(rectangle (rect 16 16 176 160)(line_width 1))
	)
	(annotation_block (parameter)(rect 208 -64 308 16))
)
